export declare class Extension {
    static EMPTY: {
        makerAssetSuffix: string;
        takerAssetSuffix: string;
        makingAmountData: string;
        takingAmountData: string;
        predicate: string;
        makerPermit: string;
        preInteraction: string;
        postInteraction: string;
        customData: string;
    };
    private static fields;
    readonly makerAssetSuffix: string;
    readonly takerAssetSuffix: string;
    readonly makingAmountData: string;
    readonly takingAmountData: string;
    readonly predicate: string;
    readonly makerPermit: string;
    readonly preInteraction: string;
    readonly postInteraction: string;
    readonly customData: string;
    constructor(data?: {
        makerAssetSuffix: string;
        takerAssetSuffix: string;
        makingAmountData: string;
        takingAmountData: string;
        predicate: string;
        makerPermit: string;
        preInteraction: string;
        postInteraction: string;
        customData: string;
    });
    get hasPredicate(): boolean;
    get hasMakerPermit(): boolean;
    static decode(bytes: string): Extension;
    static default(): Extension;
    keccak256(): bigint;
    isEmpty(): boolean;
    encode(): string;
    private getAll;
}
