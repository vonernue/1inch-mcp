"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.uint8ArrayToHex = exports.hexToUint8Array = void 0;
const assert_1 = __importDefault(require("assert"));
const zero_x_prefix_1 = require("./zero-x-prefix");
const validations_1 = require("../validations");
/**
 * Convert hex string to Uint8Array. String must be prefixed with 0x and have even length
 */
const hexToUint8Array = (hex) => {
    (0, assert_1.default)((0, validations_1.isHexBytes)(hex), 'invalid hex bytes');
    const trimmed = (0, zero_x_prefix_1.trim0x)(hex);
    const array = new Uint8Array({ length: trimmed.length / 2 });
    for (let i = 0; i < trimmed.length; i += 2) {
        array[i / 2] = parseInt(trimmed.slice(i, i + 2), 16);
    }
    return array;
};
exports.hexToUint8Array = hexToUint8Array;
/**
 * Convert Uint8Array to hex string.
 */
const uint8ArrayToHex = (arr) => {
    return '0x' + [...arr].map((i) => i.toString(16).padStart(2, '0')).join('');
};
exports.uint8ArrayToHex = uint8ArrayToHex;
//# sourceMappingURL=uint8-array.js.map