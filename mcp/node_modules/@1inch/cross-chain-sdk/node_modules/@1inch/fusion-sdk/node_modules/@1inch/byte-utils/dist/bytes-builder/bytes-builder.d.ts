import { BN } from '../bn/bn';
/**
 * Helper class to build an arbitrary bytes sequence
 */
export declare class BytesBuilder {
    private bytes;
    constructor(init?: string | BN | bigint);
    /**
     * Returns current bytes count
     */
    get length(): number;
    addAddress(address: string | BN | bigint): this;
    addBytes(bytes: string): this;
    addByte(byte: string | BN | bigint): this;
    addUint8(val: string | BN | bigint): this;
    addUint16(val: string | BN | bigint): this;
    addUint24(val: string | BN | bigint): this;
    addUint32(val: string | BN | bigint): this;
    addUint64(val: string | BN | bigint): this;
    addUint128(val: string | BN | bigint): this;
    addUint160(val: string | BN | bigint): this;
    addUint256(val: string | BN | bigint): this;
    /**
     * Returns bytes as single bigint value
     */
    asBigInt(): bigint;
    /**
     * Returns hex string
     *
     * @param prefixed should be string prefixed with 0x or not, true by default
     */
    asHex(prefixed?: boolean): string;
    private append;
    private addNBytes;
}
