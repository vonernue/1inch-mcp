"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FusionExtension = void 0;
const tslib_1 = require("tslib");
const limit_order_sdk_1 = require("@1inch/limit-order-sdk");
const assert_1 = tslib_1.__importDefault(require("assert"));
const auction_details_1 = require("./auction-details");
const settlement_post_interaction_data_1 = require("./settlement-post-interaction-data");
class FusionExtension {
    constructor(address, auctionDetails, postInteractionData, makerPermit) {
        this.address = address;
        this.auctionDetails = auctionDetails;
        this.postInteractionData = postInteractionData;
        this.makerPermit = makerPermit;
        this.builder = new limit_order_sdk_1.ExtensionBuilder();
        const detailsBytes = this.auctionDetails.encode();
        this.builder
            .withMakingAmountData(this.address, detailsBytes)
            .withTakingAmountData(this.address, detailsBytes)
            .withPostInteraction(new limit_order_sdk_1.Interaction(this.address, this.postInteractionData.encode()));
        if (makerPermit) {
            this.builder.withMakerPermit(makerPermit.target, makerPermit.data);
        }
    }
    static decode(bytes) {
        const extension = limit_order_sdk_1.Extension.decode(bytes);
        return FusionExtension.fromExtension(extension);
    }
    static fromExtension(extension) {
        const settlementContract = limit_order_sdk_1.Address.fromFirstBytes(extension.makingAmountData);
        (0, assert_1.default)(limit_order_sdk_1.Address.fromFirstBytes(extension.takingAmountData).equal(settlementContract) &&
            limit_order_sdk_1.Address.fromFirstBytes(extension.postInteraction).equal(settlementContract), 'Invalid extension, all calls should be to the same address');
        const auctionDetails = auction_details_1.AuctionDetails.fromExtension(extension);
        const postInteractionData = settlement_post_interaction_data_1.SettlementPostInteractionData.fromExtension(extension);
        const permit = extension.hasMakerPermit
            ? limit_order_sdk_1.Interaction.decode(extension.makerPermit)
            : undefined;
        return new FusionExtension(settlementContract, auctionDetails, postInteractionData, permit);
    }
    build() {
        return this.builder.build();
    }
}
exports.FusionExtension = FusionExtension;
//# sourceMappingURL=fusion-extension.js.map